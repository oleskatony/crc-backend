name: Backend Deployment

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install boto3
          pip install pytest

      - name: Run Tests
        run: |
          pytest test_visitor_counter_lambda.py

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check if DynamoDB table exists
        id: check-table
        run: |
          aws dynamodb describe-table --table-name VisitorCounter --query "Table" --output text || echo "::set-output name=table_exists::false"

      - name: Check if API Gateway exists
        id: check-api
        run: |
          aws apigateway get-rest-apis --query "items[?name=='VisitorCounterAPI']" --output text || echo "::set-output name=api_exists::false"

      - name: Check if IAM Role exists
        id: check-iam-role
        run: |
          aws iam get-role --role-name lambda_role --query "Role.RoleName" --output text || echo "::set-output name=iam_role_exists::false"

      - name: Initialize Terraform
        run: |
          terraform init

      - name: Create DynamoDB table if it doesn't exist
        if: steps.check-table.outputs.table_exists == 'false'
        run: |
          terraform apply -auto-approve -target=aws_dynamodb_table.visitor_counter

      - name: Create API Gateway if it doesn't exist
        if: steps.check-api.outputs.api_exists == 'false'
        run: |
          terraform apply -auto-approve -target=aws_api_gateway_rest_api.api_gateway -target=aws_api_gateway_resource.api_resource -target=aws_api_gateway_method.api_method -target=aws_api_gateway_integration.api_integration -target=aws_api_gateway_deployment.api_deployment

      - name: Create IAM Role if it doesn't exist
        if: steps.check-iam-role.outputs.iam_role_exists == 'false'
        run: |
          terraform apply -auto-approve -target=aws_iam_role.lambda_role
